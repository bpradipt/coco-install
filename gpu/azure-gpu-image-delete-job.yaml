apiVersion: batch/v1
kind: Job
metadata:
  name: azure-gpu-image-deletion
  namespace: openshift-sandboxed-containers-operator
spec:
  parallelism: 1
  completions: 1
  backoffLimit: 1
  template:
    metadata:
      name: azure-gpu-image-deletion
    spec:
      containers:
      - name: delete
        image: registry.access.redhat.com/ubi9/ubi:9.3
        securityContext:
          runAsUser: 0 # needed for container mode dnf access
        env:
          - name: GALLERY_NAME
            value: "rhelGPUGallery"
          - name: GALLERY_IMAGE_DEFINITION_NAME
            value: "gpu-image"
          - name: DELETE_GALLERY
            value: "true" # Set this to false if you don't want to delete the gallery
          - name: DELETE_IMAGE_DEFINITION
            value: "true" # Set this to false if you don't want to delete the image definition
        envFrom:
        - secretRef:
            name: peer-pods-secret
        - configMapRef:
            name: peer-pods-cm
            optional: true
        command:
        - /bin/sh
        - -c
        - |
          set -e
          rpm --import https://packages.microsoft.com/keys/microsoft.asc
          dnf install -y https://packages.microsoft.com/config/rhel/9.0/packages-microsoft-prod.rpm
          yum install -y azure-cli
          PATH="/usr/bin:${PATH}"
          [[ ! "${AZURE_REGION}" ]] && echo "AZURE_REGION is missing" && exit 1
          [[ ! "${AZURE_TENANT_ID}" ]] && echo "AZURE_TENANT_ID is missing" && exit 1
          [[ ! "${AZURE_RESOURCE_GROUP}" ]] && echo "AZURE_RESOURCE_GROUP is missing" && exit 1
          [[ ! "${AZURE_SUBSCRIPTION_ID}" ]] && echo "AZURE_SUBSCRIPTION_ID is missing" && exit 1
          [[ ! "${AZURE_CLIENT_SECRET}" ]] && echo "AZURE_CLIENT_SECRET is missing" && exit 1
          [[ ! "${AZURE_CLIENT_ID}" ]] && echo "AZURE_CLIENT_ID is missing" && exit 1
          az login --service-principal --user=${AZURE_CLIENT_ID} --password=${AZURE_CLIENT_SECRET} --tenant=${AZURE_TENANT_ID}

          echo "Get all the image versions"
          IMAGE_IDS=$(az sig image-version list \
              --resource-group "${AZURE_RESOURCE_GROUP}" \
              --gallery-name "${GALLERY_NAME}" \
              --gallery-image-definition "${GALLERY_IMAGE_NAME}" \
              -o tsv --query "[].{ID: id}" || true)


          [[ -n "${IMAGE_IDS}" ]] &&  \
                      echo "Deleting the image versions ${IMAGE_IDS}" && \
                      az sig image-version delete --ids "${IMAGE_IDS}"

          [[ "${DELETE_IMAGE_DEFINITION}" == true ]] && \
                      echo "Deleting image definition" && \
                      az sig image-definition delete \
                             --gallery-name "${GALLERY_NAME}" \
                             --resource-group "${AZURE_RESOURCE_GROUP}" \
                             --gallery-image-definition "${GALLERY_IMAGE_DEFINITION_NAME}"

          [[ "${DELETE_GALLERY}" == true ]] && \
                      echo "Deleting the gallery" && \
                      az sig delete \
                             --resource-group "${AZURE_RESOURCE_GROUP}" \
                             --gallery-name "${GALLERY_NAME}"

          echo "DONE"
      restartPolicy: Never
